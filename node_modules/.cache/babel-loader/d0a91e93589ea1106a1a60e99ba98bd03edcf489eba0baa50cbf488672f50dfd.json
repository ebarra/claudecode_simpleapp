{"ast":null,"code":"var _jsxFileName = \"/home/ebarra/trabajo/claudecode/test1/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport TimeDisplay from './components/TimeDisplay';\nimport TimerSection from './components/TimerSection';\nimport ButtonPanel from './components/ButtonPanel';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [accumulatedTime, setAccumulatedTime] = useState(0);\n  const [isEarning, setIsEarning] = useState(false);\n  const [isSpending, setIsSpending] = useState(false);\n  const [doubleSpeed, setDoubleSpeed] = useState(false);\n\n  // Load accumulated time from localStorage on initial render\n  useEffect(() => {\n    const savedTime = localStorage.getItem('accumulatedTime');\n    if (savedTime) {\n      setAccumulatedTime(parseInt(savedTime, 10));\n    }\n  }, []);\n\n  // Save accumulated time to localStorage whenever it changes\n  useEffect(() => {\n    localStorage.setItem('accumulatedTime', accumulatedTime.toString());\n  }, [accumulatedTime]);\n  const handleEarnStart = () => {\n    setIsEarning(true);\n    setIsSpending(false);\n  };\n  const handleEarnStop = () => {\n    setIsEarning(false);\n  };\n  const handleSpendStart = () => {\n    // Only allow spending if there's time accumulated\n    if (accumulatedTime > 0) {\n      setIsSpending(true);\n      setIsEarning(false);\n    }\n  };\n  const handleSpendStop = () => {\n    setIsSpending(false);\n  };\n  const updateAccumulatedTime = newTime => {\n    setAccumulatedTime(newTime);\n  };\n  const resetTimer = () => {\n    setAccumulatedTime(0);\n    setIsEarning(false);\n    setIsSpending(false);\n    setDoubleSpeed(false);\n  };\n  const toggleDoubleSpeed = () => {\n    setDoubleSpeed(!doubleSpeed);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(TimeDisplay, {\n      accumulatedTime: accumulatedTime,\n      isEarning: isEarning,\n      isSpending: isSpending,\n      doubleSpeed: doubleSpeed\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"timer-container\",\n      children: [/*#__PURE__*/_jsxDEV(TimerSection, {\n        title: \"Earn Time\",\n        buttonText: isEarning ? \"Stop\" : \"Start\",\n        isActive: isEarning,\n        onStart: handleEarnStart,\n        onStop: handleEarnStop,\n        accumulatedTime: accumulatedTime,\n        updateAccumulatedTime: updateAccumulatedTime,\n        mode: \"earn\",\n        doubleSpeed: doubleSpeed\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TimerSection, {\n        title: \"Spend Time\",\n        buttonText: isSpending ? \"Stop\" : \"Start\",\n        isActive: isSpending,\n        onStart: handleSpendStart,\n        onStop: handleSpendStop,\n        accumulatedTime: accumulatedTime,\n        updateAccumulatedTime: updateAccumulatedTime,\n        mode: \"spend\",\n        disabled: accumulatedTime <= 0,\n        doubleSpeed: doubleSpeed\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ButtonPanel, {\n      onReset: resetTimer,\n      onDoubleSpeed: toggleDoubleSpeed\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Y+Rai+Stay90DhjHO9QpTbcyObQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","TimeDisplay","TimerSection","ButtonPanel","jsxDEV","_jsxDEV","App","_s","accumulatedTime","setAccumulatedTime","isEarning","setIsEarning","isSpending","setIsSpending","doubleSpeed","setDoubleSpeed","savedTime","localStorage","getItem","parseInt","setItem","toString","handleEarnStart","handleEarnStop","handleSpendStart","handleSpendStop","updateAccumulatedTime","newTime","resetTimer","toggleDoubleSpeed","className","children","fileName","_jsxFileName","lineNumber","columnNumber","title","buttonText","isActive","onStart","onStop","mode","disabled","onReset","onDoubleSpeed","_c","$RefreshReg$"],"sources":["/home/ebarra/trabajo/claudecode/test1/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport TimeDisplay from './components/TimeDisplay';\nimport TimerSection from './components/TimerSection';\nimport ButtonPanel from './components/ButtonPanel';\n\nfunction App() {\n  const [accumulatedTime, setAccumulatedTime] = useState(0);\n  const [isEarning, setIsEarning] = useState(false);\n  const [isSpending, setIsSpending] = useState(false);\n  const [doubleSpeed, setDoubleSpeed] = useState(false);\n  \n  // Load accumulated time from localStorage on initial render\n  useEffect(() => {\n    const savedTime = localStorage.getItem('accumulatedTime');\n    if (savedTime) {\n      setAccumulatedTime(parseInt(savedTime, 10));\n    }\n  }, []);\n  \n  // Save accumulated time to localStorage whenever it changes\n  useEffect(() => {\n    localStorage.setItem('accumulatedTime', accumulatedTime.toString());\n  }, [accumulatedTime]);\n  \n  const handleEarnStart = () => {\n    setIsEarning(true);\n    setIsSpending(false);\n  };\n  \n  const handleEarnStop = () => {\n    setIsEarning(false);\n  };\n  \n  const handleSpendStart = () => {\n    // Only allow spending if there's time accumulated\n    if (accumulatedTime > 0) {\n      setIsSpending(true);\n      setIsEarning(false);\n    }\n  };\n  \n  const handleSpendStop = () => {\n    setIsSpending(false);\n  };\n  \n  const updateAccumulatedTime = (newTime) => {\n    setAccumulatedTime(newTime);\n  };\n  \n  const resetTimer = () => {\n    setAccumulatedTime(0);\n    setIsEarning(false);\n    setIsSpending(false);\n    setDoubleSpeed(false);\n  };\n  \n  const toggleDoubleSpeed = () => {\n    setDoubleSpeed(!doubleSpeed);\n  };\n  \n  return (\n    <div className=\"app\">\n      <TimeDisplay \n        accumulatedTime={accumulatedTime} \n        isEarning={isEarning} \n        isSpending={isSpending}\n        doubleSpeed={doubleSpeed}\n      />\n      \n      <div className=\"timer-container\">\n        <TimerSection \n          title=\"Earn Time\"\n          buttonText={isEarning ? \"Stop\" : \"Start\"}\n          isActive={isEarning}\n          onStart={handleEarnStart}\n          onStop={handleEarnStop}\n          accumulatedTime={accumulatedTime}\n          updateAccumulatedTime={updateAccumulatedTime}\n          mode=\"earn\"\n          doubleSpeed={doubleSpeed}\n        />\n        \n        <TimerSection \n          title=\"Spend Time\"\n          buttonText={isSpending ? \"Stop\" : \"Start\"}\n          isActive={isSpending}\n          onStart={handleSpendStart}\n          onStop={handleSpendStop}\n          accumulatedTime={accumulatedTime}\n          updateAccumulatedTime={updateAccumulatedTime}\n          mode=\"spend\"\n          disabled={accumulatedTime <= 0}\n          doubleSpeed={doubleSpeed}\n        />\n      </div>\n      \n      <ButtonPanel onReset={resetTimer} onDoubleSpeed={toggleDoubleSpeed} />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}