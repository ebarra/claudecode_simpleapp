{"ast":null,"code":"var _jsxFileName = \"/home/ebarra/trabajo/claudecode/test1/src/components/TimerSection.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport './TimerSection.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TimerSection({\n  title,\n  buttonText,\n  isActive,\n  onStart,\n  onStop,\n  accumulatedTime,\n  updateAccumulatedTime,\n  mode,\n  disabled,\n  doubleSpeed\n}) {\n  _s();\n  const timerRef = useRef(null);\n  useEffect(() => {\n    if (isActive) {\n      // Set up interval to update time\n      timerRef.current = setInterval(() => {\n        if (mode === 'earn') {\n          // Add time when earning (double if doubleSpeed is active)\n          const increment = doubleSpeed ? 2 : 1;\n          updateAccumulatedTime(accumulatedTime + increment);\n        } else if (mode === 'spend') {\n          // Subtract time when spending (double if doubleSpeed is active)\n          const decrement = doubleSpeed ? 2 : 1;\n          const newTime = accumulatedTime - decrement;\n          // Ensure time doesn't go below zero\n          const adjustedNewTime = Math.max(0, newTime);\n          updateAccumulatedTime(adjustedNewTime);\n\n          // Stop timer if time runs out\n          if (adjustedNewTime <= 0) {\n            onStop();\n          }\n        }\n      }, 1000);\n    } else if (timerRef.current) {\n      // Clear interval when not active\n      clearInterval(timerRef.current);\n    }\n\n    // Clean up interval on unmount or when active state changes\n    return () => {\n      if (timerRef.current) {\n        clearInterval(timerRef.current);\n      }\n    };\n  }, [isActive, accumulatedTime, mode, updateAccumulatedTime, onStop, doubleSpeed]);\n  const handleButtonClick = () => {\n    if (isActive) {\n      onStop();\n    } else {\n      onStart();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `timer-section ${mode}`,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"timer-button\",\n      onClick: handleButtonClick,\n      disabled: disabled && !isActive,\n      children: buttonText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n_s(TimerSection, \"/gPr91I23C5MYSmlVUbYA7l794U=\");\n_c = TimerSection;\nexport default TimerSection;\nvar _c;\n$RefreshReg$(_c, \"TimerSection\");","map":{"version":3,"names":["React","useEffect","useRef","jsxDEV","_jsxDEV","TimerSection","title","buttonText","isActive","onStart","onStop","accumulatedTime","updateAccumulatedTime","mode","disabled","doubleSpeed","_s","timerRef","current","setInterval","increment","decrement","newTime","adjustedNewTime","Math","max","clearInterval","handleButtonClick","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/home/ebarra/trabajo/claudecode/test1/src/components/TimerSection.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport './TimerSection.css';\n\nfunction TimerSection({\n  title,\n  buttonText,\n  isActive,\n  onStart,\n  onStop,\n  accumulatedTime,\n  updateAccumulatedTime,\n  mode,\n  disabled,\n  doubleSpeed\n}) {\n  const timerRef = useRef(null);\n  \n  useEffect(() => {\n    if (isActive) {\n      // Set up interval to update time\n      timerRef.current = setInterval(() => {\n        if (mode === 'earn') {\n          // Add time when earning (double if doubleSpeed is active)\n          const increment = doubleSpeed ? 2 : 1;\n          updateAccumulatedTime(accumulatedTime + increment);\n        } else if (mode === 'spend') {\n          // Subtract time when spending (double if doubleSpeed is active)\n          const decrement = doubleSpeed ? 2 : 1;\n          const newTime = accumulatedTime - decrement;\n          // Ensure time doesn't go below zero\n          const adjustedNewTime = Math.max(0, newTime);\n          updateAccumulatedTime(adjustedNewTime);\n          \n          // Stop timer if time runs out\n          if (adjustedNewTime <= 0) {\n            onStop();\n          }\n        }\n      }, 1000);\n    } else if (timerRef.current) {\n      // Clear interval when not active\n      clearInterval(timerRef.current);\n    }\n    \n    // Clean up interval on unmount or when active state changes\n    return () => {\n      if (timerRef.current) {\n        clearInterval(timerRef.current);\n      }\n    };\n  }, [isActive, accumulatedTime, mode, updateAccumulatedTime, onStop, doubleSpeed]);\n  \n  const handleButtonClick = () => {\n    if (isActive) {\n      onStop();\n    } else {\n      onStart();\n    }\n  };\n  \n  return (\n    <div className={`timer-section ${mode}`}>\n      <h2>{title}</h2>\n      <button \n        className=\"timer-button\"\n        onClick={handleButtonClick}\n        disabled={disabled && !isActive}\n      >\n        {buttonText}\n      </button>\n    </div>\n  );\n}\n\nexport default TimerSection;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,OAAO,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,SAASC,YAAYA,CAAC;EACpBC,KAAK;EACLC,UAAU;EACVC,QAAQ;EACRC,OAAO;EACPC,MAAM;EACNC,eAAe;EACfC,qBAAqB;EACrBC,IAAI;EACJC,QAAQ;EACRC;AACF,CAAC,EAAE;EAAAC,EAAA;EACD,MAAMC,QAAQ,GAAGf,MAAM,CAAC,IAAI,CAAC;EAE7BD,SAAS,CAAC,MAAM;IACd,IAAIO,QAAQ,EAAE;MACZ;MACAS,QAAQ,CAACC,OAAO,GAAGC,WAAW,CAAC,MAAM;QACnC,IAAIN,IAAI,KAAK,MAAM,EAAE;UACnB;UACA,MAAMO,SAAS,GAAGL,WAAW,GAAG,CAAC,GAAG,CAAC;UACrCH,qBAAqB,CAACD,eAAe,GAAGS,SAAS,CAAC;QACpD,CAAC,MAAM,IAAIP,IAAI,KAAK,OAAO,EAAE;UAC3B;UACA,MAAMQ,SAAS,GAAGN,WAAW,GAAG,CAAC,GAAG,CAAC;UACrC,MAAMO,OAAO,GAAGX,eAAe,GAAGU,SAAS;UAC3C;UACA,MAAME,eAAe,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,EAAEH,OAAO,CAAC;UAC5CV,qBAAqB,CAACW,eAAe,CAAC;;UAEtC;UACA,IAAIA,eAAe,IAAI,CAAC,EAAE;YACxBb,MAAM,CAAC,CAAC;UACV;QACF;MACF,CAAC,EAAE,IAAI,CAAC;IACV,CAAC,MAAM,IAAIO,QAAQ,CAACC,OAAO,EAAE;MAC3B;MACAQ,aAAa,CAACT,QAAQ,CAACC,OAAO,CAAC;IACjC;;IAEA;IACA,OAAO,MAAM;MACX,IAAID,QAAQ,CAACC,OAAO,EAAE;QACpBQ,aAAa,CAACT,QAAQ,CAACC,OAAO,CAAC;MACjC;IACF,CAAC;EACH,CAAC,EAAE,CAACV,QAAQ,EAAEG,eAAe,EAAEE,IAAI,EAAED,qBAAqB,EAAEF,MAAM,EAAEK,WAAW,CAAC,CAAC;EAEjF,MAAMY,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,IAAInB,QAAQ,EAAE;MACZE,MAAM,CAAC,CAAC;IACV,CAAC,MAAM;MACLD,OAAO,CAAC,CAAC;IACX;EACF,CAAC;EAED,oBACEL,OAAA;IAAKwB,SAAS,EAAE,iBAAiBf,IAAI,EAAG;IAAAgB,QAAA,gBACtCzB,OAAA;MAAAyB,QAAA,EAAKvB;IAAK;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAChB7B,OAAA;MACEwB,SAAS,EAAC,cAAc;MACxBM,OAAO,EAAEP,iBAAkB;MAC3Bb,QAAQ,EAAEA,QAAQ,IAAI,CAACN,QAAS;MAAAqB,QAAA,EAE/BtB;IAAU;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAACjB,EAAA,CArEQX,YAAY;AAAA8B,EAAA,GAAZ9B,YAAY;AAuErB,eAAeA,YAAY;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}