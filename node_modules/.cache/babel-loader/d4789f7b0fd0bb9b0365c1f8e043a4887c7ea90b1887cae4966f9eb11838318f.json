{"ast":null,"code":"var _jsxFileName = \"/home/ebarra/trabajo/claudecode/test1/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport TimeDisplay from './components/TimeDisplay';\nimport TimerSection from './components/TimerSection';\nimport ButtonPanel from './components/ButtonPanel';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [accumulatedTime, setAccumulatedTime] = useState(0);\n  const [isEarning, setIsEarning] = useState(false);\n  const [isSpending, setIsSpending] = useState(false);\n\n  // Load accumulated time from localStorage on initial render\n  useEffect(() => {\n    const savedTime = localStorage.getItem('accumulatedTime');\n    if (savedTime) {\n      setAccumulatedTime(parseInt(savedTime, 10));\n    }\n  }, []);\n\n  // Save accumulated time to localStorage whenever it changes\n  useEffect(() => {\n    localStorage.setItem('accumulatedTime', accumulatedTime.toString());\n  }, [accumulatedTime]);\n  const handleEarnStart = () => {\n    setIsEarning(true);\n    setIsSpending(false);\n  };\n  const handleEarnStop = () => {\n    setIsEarning(false);\n  };\n  const handleSpendStart = () => {\n    // Only allow spending if there's time accumulated\n    if (accumulatedTime > 0) {\n      setIsSpending(true);\n      setIsEarning(false);\n    }\n  };\n  const handleSpendStop = () => {\n    setIsSpending(false);\n  };\n  const updateAccumulatedTime = newTime => {\n    setAccumulatedTime(newTime);\n  };\n  const resetTimer = () => {\n    setAccumulatedTime(0);\n    setIsEarning(false);\n    setIsSpending(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(TimeDisplay, {\n      accumulatedTime: accumulatedTime,\n      isEarning: isEarning,\n      isSpending: isSpending\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"timer-container\",\n      children: [/*#__PURE__*/_jsxDEV(TimerSection, {\n        title: \"Earn Time\",\n        buttonText: isEarning ? \"Stop\" : \"Start\",\n        isActive: isEarning,\n        onStart: handleEarnStart,\n        onStop: handleEarnStop,\n        accumulatedTime: accumulatedTime,\n        updateAccumulatedTime: updateAccumulatedTime,\n        mode: \"earn\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TimerSection, {\n        title: \"Spend Time\",\n        buttonText: isSpending ? \"Stop\" : \"Start\",\n        isActive: isSpending,\n        onStart: handleSpendStart,\n        onStop: handleSpendStop,\n        accumulatedTime: accumulatedTime,\n        updateAccumulatedTime: updateAccumulatedTime,\n        mode: \"spend\",\n        disabled: accumulatedTime <= 0\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ButtonPanel, {\n      onReset: resetTimer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ysxOd2so3cbBXhWo8J+tEXZnf5w=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","TimeDisplay","TimerSection","ButtonPanel","jsxDEV","_jsxDEV","App","_s","accumulatedTime","setAccumulatedTime","isEarning","setIsEarning","isSpending","setIsSpending","savedTime","localStorage","getItem","parseInt","setItem","toString","handleEarnStart","handleEarnStop","handleSpendStart","handleSpendStop","updateAccumulatedTime","newTime","resetTimer","className","children","fileName","_jsxFileName","lineNumber","columnNumber","title","buttonText","isActive","onStart","onStop","mode","disabled","onReset","_c","$RefreshReg$"],"sources":["/home/ebarra/trabajo/claudecode/test1/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport TimeDisplay from './components/TimeDisplay';\nimport TimerSection from './components/TimerSection';\nimport ButtonPanel from './components/ButtonPanel';\n\nfunction App() {\n  const [accumulatedTime, setAccumulatedTime] = useState(0);\n  const [isEarning, setIsEarning] = useState(false);\n  const [isSpending, setIsSpending] = useState(false);\n  \n  // Load accumulated time from localStorage on initial render\n  useEffect(() => {\n    const savedTime = localStorage.getItem('accumulatedTime');\n    if (savedTime) {\n      setAccumulatedTime(parseInt(savedTime, 10));\n    }\n  }, []);\n  \n  // Save accumulated time to localStorage whenever it changes\n  useEffect(() => {\n    localStorage.setItem('accumulatedTime', accumulatedTime.toString());\n  }, [accumulatedTime]);\n  \n  const handleEarnStart = () => {\n    setIsEarning(true);\n    setIsSpending(false);\n  };\n  \n  const handleEarnStop = () => {\n    setIsEarning(false);\n  };\n  \n  const handleSpendStart = () => {\n    // Only allow spending if there's time accumulated\n    if (accumulatedTime > 0) {\n      setIsSpending(true);\n      setIsEarning(false);\n    }\n  };\n  \n  const handleSpendStop = () => {\n    setIsSpending(false);\n  };\n  \n  const updateAccumulatedTime = (newTime) => {\n    setAccumulatedTime(newTime);\n  };\n  \n  const resetTimer = () => {\n    setAccumulatedTime(0);\n    setIsEarning(false);\n    setIsSpending(false);\n  };\n  \n  return (\n    <div className=\"app\">\n      <TimeDisplay \n        accumulatedTime={accumulatedTime} \n        isEarning={isEarning} \n        isSpending={isSpending}\n      />\n      \n      <div className=\"timer-container\">\n        <TimerSection \n          title=\"Earn Time\"\n          buttonText={isEarning ? \"Stop\" : \"Start\"}\n          isActive={isEarning}\n          onStart={handleEarnStart}\n          onStop={handleEarnStop}\n          accumulatedTime={accumulatedTime}\n          updateAccumulatedTime={updateAccumulatedTime}\n          mode=\"earn\"\n        />\n        \n        <TimerSection \n          title=\"Spend Time\"\n          buttonText={isSpending ? \"Stop\" : \"Start\"}\n          isActive={isSpending}\n          onStart={handleSpendStart}\n          onStop={handleSpendStop}\n          accumulatedTime={accumulatedTime}\n          updateAccumulatedTime={updateAccumulatedTime}\n          mode=\"spend\"\n          disabled={accumulatedTime <= 0}\n        />\n      </div>\n      \n      <ButtonPanel onReset={resetTimer} />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}